TO-DO List: 

Python:
Future: add A.1.5 Moment equations
Future: calculate internal forces, local system (apply angles), that is, update moments based on deflections.
Future: auto goal seek.
9/11/2020: Converted OpenSCAD as-is to Python, that is, converted single tree, first iteration, openscad compliant code.

Verification:
Print canteliver beam and take photos of deflected beam in front of grid paper

9/11/2020: Investigated force vs moment beam accuracy.  
Test Case: Four inch Cantilevel beam (8 segment) with 10 lb end load, expected results (based on Roark formulas):
pts=[[0,0],[0.4961, 0.0626],[0.9639,0.2397],[1.3822,0.5147],[1.7340,0.8715],[2.0056,1.2936],[2.1826,1.7647],[2.2438,2.2685],[2.262,2.7887],[0,2.7887],[0,0]]
Conclusion: complex combined loading formulas from section A.1.3 don't help accuracy.  
==> Just use combination of A.1.2 Vertical Force and A.1.5 Moment. 
A Q of 1.2 yield results for the vertical loaded cantilever beam test case (8 seg) that are close to Roark formula results.
Future: Add condition for mostly pure axial tensile loading (rope), and pure compression loading (add eccentricity).

MAJOR ENHANCEMENTS:
ADD BRANCHES.  
10/8/2020 ==> Implemented in OpenSCAD! Called this code LDB (Large Displacement Beam).
After many attempts at a data structure that supports branches, I settled on using Nested Vectors (Trees).
The benefit of this is that the user and the programmer do not need to keep track of offsets in the vectors.
Write structure like writing nested curly brackets.  Indent each level and it's not so hard to keep track of.
I have also merged the loads vector with the beam vector.  The plan is to have a single nested vector (DNA) decribe any structural arrangement.
Tree = [[beam,x,x,x], [fork, [[beam,x,x,x],[beam,x,x,x]] , [[beam,x,x,x],[beam,x,x,x]] ] , [beam,x,x,x],[beam,x,x,x]]

ISSUES (as of 11/5/2020) WITH LDB in OpenSCAD:

11/6/2020: RESOLVED FOR SINGLE BRANCH. STILL HAVE ISSUE WITH MULTI BRANCH. Get external forces to display on deformed beam.  
11/7/2020: RESOLVED FOR TREES, BUT SUM ANGLE AT FORK DOES NOT MATCH...DEFLECTIONS ON WRONG SIZE OF BRANCH? SEE FORK2 Presently works for undeformed beam, not deformed.
11/8/2020: RESOLVED SUB ANGLE WITH MULTI LEVEL FORKS.
11/6/2020: CONCLUDED THAT SECOND ITERATION RESULTS WERE WORSE THAN FIRST. 

Tree results show that deflections are not being updated by large deflections.  This is a problem for loads, not moments.
May need to step the loads up in increments, as was in the old code. 
IDEA: LOAD GRADUALLY. Difficult to code in OpenSCAD.  Try Python.

11/9/2020: RESOLVED. Add ORIGIN, so that starting point of structure can be moved.  Will be very helpfull in Compliant Claw.

Perform data quality check!  provide output (tree depth, number of branches, number of beams, number of forces) 
Check for correct number of fields for each leaf.
Check if at least one non-zero force exists.
Stop if there are data quality problems.

Write deformed DNA at the end, so model can be restarted from deformed shape.

the code has two versions of sum_fwd and sum_tail, one for list, one for tree.  Do I need both?

11/5/2020: RESOLVED.  Multi tree branch works (see Tree).

11/5/2020:  RESOLVED: FORK model does not sum angle at fork correctly:
DON'T NEED DEFORMED VERSION OF SUM_ANGLES, JUST ADD RESULTS TO UNDEFORMED TREE.

DISPLACEMENT CONSTRAINTS: 
11/8/2020: experimented with Compliant Claw.  Loads at node is magnitude and vector, or Fx and Fy. Need to adjust both variables to meet displacement constraint.
Not intuitive how the variables meet position.
Load on other part of structure influences load at displacemen constraint.

VALIDATE: COMPARE WITH THEORETICAL AND SINGLE BEAM MODELS
Normal-LOAD, 2 SEG, 4 SEG, 6 SEG
Consider physical test of large displacement.

STRESS CALCULATIONS NEED TO BE validated

CHECK BEAM COMLUM STABILITY??  Convergence problem?  Test in Python.

ADD AUTOMATIC SIZING and/or node movement!!! (Python)

Add overlap to CUBES for printing, or have cross section follow a spline.

DONE (9/6/2020): UPDATE U BEAM TO MATCH CLAW DESIGN. Get dims from Onshape.

DONE (9/6/2020): CREATE VIDEO (gif) showing claw design.  Document progress before major rewrite.

